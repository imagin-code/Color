<i:MainWindow x:Class="Imagin.Apps.Color.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:i="http://imagin.tech/imagin/wpf"
    i:LocalizeDictionary.DesignCulture="en" i:ResxLocalizationProvider.DefaultAssembly="{i:DefaultAssemblyName}" i:ResxLocalizationProvider.DefaultDictionary="Main"
    xmlns:local="clr-namespace:Imagin.Apps.Color"
    xmlns:Hardcodet="http://www.hardcodet.net/taskbar"
    Height="{i:Options WindowHeight, Mode=TwoWay}" Width="{i:Options WindowWidth, Mode=TwoWay}"
    i:XWindow.FooterVisibility="Collapsed" i:XWindow.TitleIcon="{i:ProjectImage Logo.png}" i:XWindow.TitleIconVisibility="Collapsed"
    MinHeight="300" MinWidth="600"
    Title="{i:TranslateBinding Title}"
    WindowState="{i:Options WindowState, Mode=TwoWay}">
    <i:MainWindow.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}"/>
        <KeyBinding Modifiers="Ctrl+Shift" Key="S" Command="{Binding SaveAllCommand}"/>
    </i:MainWindow.InputBindings>
    <i:XWindow.HeaderButtons>
        <i:WindowButtons>
            <i:WindowButton
                Command="{Binding ShowAboutWindowCommand}"
                Content="{i:InternalImage Image=Info}"
                ContentSize="12,12"
                IsCheckable="False"
                ToolTip="{i:Loc About}"/>
            <i:WindowButton
                Content="{i:InternalImage Image=Options}"
                ContentSize="12,12"
                IsCheckable="True"
                IsChecked="{Binding OptionsPanel.IsVisible, ElementName=ColorControl, Mode=TwoWay}"
                ToolTip="{i:Loc Options}"/>
        </i:WindowButtons>
    </i:XWindow.HeaderButtons>
    <i:XWindow.Menu>
        <Menu>
            <MenuItem Header="{i:Loc Color}"
                Icon="{i:InternalImage Image=Color}">
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <Separator i:XSeparator.Header="{i:RemoteBinding ActiveDocument, RemoteSource=MainViewModel}">
                            <i:XSeparator.HeaderTemplate>
                                <DataTemplate DataType="{x:Type i:ColorDocument}">
                                    <StackPanel i:XPanel.Spacing="0,0,5,0" i:XPanel.SpacingExcept="Last" Orientation="Horizontal">
                                        <Ellipse Stroke="Black" StrokeThickness="1" Fill="{Binding NewColor, Converter={x:Static i:ColorToSolidColorBrushConverter.Default}}" Height="16" Width="16"/>
                                        <TextBlock>#<Run Text="{Binding NewColor, Converter={x:Static i:ColorToStringConverter.Default}, Mode=OneWay}"/></TextBlock>
                                        <i:ImageButton
                                            Command="{i:RemoteBinding ActiveDocument.SelectCommand, RemoteSource=MainViewModel}"
                                            Source="{i:InternalImage Image=Checkmark}"/>
                                        <i:ImageButton
                                            Command="{i:RemoteBinding ActiveDocument.RevertCommand, RemoteSource=MainViewModel}"
                                            Source="{i:InternalImage Image=Revert}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </i:XSeparator.HeaderTemplate>
                        </Separator>
                        <MenuItem Header="{i:Loc New}"
                            Command="{Binding NewCommand}"
                            Icon="{i:InternalImage Image=Plus}"
                            InputGestureText="{x:Null}">
                            <i:XMenuItem.InputGestureTextTemplate>
                                <DataTemplate>
                                    <ComboBox
                                        i:XItemsControl.GroupsItself="True"
                                        ItemsSource="{i:RemoteBinding Models, RemoteSource=MainViewModel}"
                                        SelectedItem="{i:Options DefaultColorModel, Mode=TwoWay}">
                                        <i:XItemsControl.GroupStyle>
                                            <GroupStyle ContainerStyle="{StaticResource {x:Type GroupItem}}">
                                                <GroupStyle.Panel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel/>
                                                    </ItemsPanelTemplate>
                                                </GroupStyle.Panel>
                                            </GroupStyle>
                                        </i:XItemsControl.GroupStyle>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Value.Name}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DataTemplate>
                            </i:XMenuItem.InputGestureTextTemplate>
                        </MenuItem>
                        <MenuItem Header="{i:Loc NewFrom}"
                            Icon="{i:InternalImage Image=Plus}"
                            IsEnabled="{i:RemoteBinding Templates.IsNotEmpty, RemoteSource=Options}"
                            ItemsSource="{i:RemoteBinding Templates, RemoteSource=Options}">
                            <MenuItem.ItemContainerStyle>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Command" Value="{i:RemoteBinding NewFromCommand, RemoteSource=MainViewModel}"/>
                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                    <Setter Property="Header" Value="{i:FileNameBinding}"/>
                                    <Setter Property="ToolTip" Value="{Binding}"/>
                                </Style>
                            </MenuItem.ItemContainerStyle>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{i:Loc Open}"
                            Command="{Binding OpenCommand}"
                            Icon="{i:InternalImage Image=Open}"
                            InputGestureText="Ctrl + O"/>
                        <Separator/>
                        <MenuItem Header="{i:Loc Clone}"
                            Command="{Binding CloneCommand}"
                            Icon="{i:InternalImage Image=Clone}"/>
                        <Separator/>
                        <MenuItem Header="{i:Loc Save}"
                            Command="{Binding SaveCommand}"
                            Icon="{i:InternalImage Image=Save}"
                            InputGestureText="Ctrl + S"/>
                        <MenuItem Header="{i:Loc SaveAll}"
                            Command="{Binding SaveAllCommand}"
                            Icon="{i:InternalImage Image=SaveAll}"
                            InputGestureText="Ctrl + Shift + S"/>
                        <MenuItem Header="{i:Loc SaveTemplate, Suffix=...}"
                            Command="{Binding SaveTemplateCommand}"
                            Icon="{i:InternalImage Image=SaveAs}"/>
                        <Separator/>
                        <MenuItem Header="{i:Loc Close}"
                            Command="{Binding CloseCommand}"
                            Icon="{i:InternalImage Image=Close}"/>
                        <MenuItem Header="{i:Loc CloseAll}"
                            Command="{Binding CloseAllCommand}"
                            Icon="{i:InternalImage Image=CloseAll}"/>
                        <MenuItem Header="{i:Loc CloseAllButThis}"
                            Command="{Binding CloseAllButThisCommand}"
                            Icon="{i:InternalImage Image=CloseAllButThis}"/>
                    </CompositeCollection>
                </MenuItem.ItemsSource>
            </MenuItem>
            <MenuItem Header="{i:Loc Models}"
                Icon="{i:InternalImage Image=XYZ}"
                ItemsSource="{Binding Models}"
                i:XItemsControl.GroupDirection="{i:RemoteBinding ModelGroupDirection, RemoteSource=Options}"
                i:XItemsControl.GroupsItself="True"
                i:XItemsControl.GroupName="{i:RemoteBinding ModelGroupName, RemoteSource=Options}"
                i:XItemsControl.GroupStyle="{StaticResource {x:Static i:XItemsControl.MenuGroupStyleKey}}"
                i:XItemsControl.SortDirection="{i:RemoteBinding ModelSortDirection, RemoteSource=Options}"
                i:XItemsControl.SortName="{i:RemoteBinding ModelSortName, RemoteSource=Options}">
                <i:XItemsControl.GroupContainerStyle>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Command" Value="{i:RemoteBinding NewCommand, RemoteSource=MainViewModel}"/>
                        <Setter Property="CommandParameter" Value="{Binding Value}"/>
                        <Setter Property="Header" Value="{Binding Value.Name}"/>
                        <Setter Property="i:XElement.ToolTipTemplate" Value="{StaticResource {x:Static i:XColor.ModelToolTipTemplateKey}}"/>
                        <Setter Property="ToolTip" Value="{Binding Value}"/>
                    </Style>
                </i:XItemsControl.GroupContainerStyle>
            </MenuItem>
            <MenuItem Header="{i:Loc Window}" Tag="0"
                Icon="{i:InternalImage Image=Open}">
                <MenuItem.Resources>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Style.Triggers>
                            <Trigger Property="Tag" Value="{x:Null}">
                                <Setter Property="Header" Value="{Binding Title}"/>
                                <Setter Property="Icon" Value="{Binding Icon}"/>
                                <Setter Property="IsCheckable" Value="True"/>
                                <Setter Property="IsChecked" Value="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Setter Property="StaysOpenOnClick" Value="True"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding TitleLocalized}" Value="True">
                                <Setter Property="Header" Value="{i:TranslateBinding Title}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Resources>
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <Separator i:XSeparator.Header="{i:Loc Layout}"/>
                        <MenuItem Tag="0" Header="{i:True}" HorizontalContentAlignment="Stretch" i:XMenuItem.IconVisibility="Collapsed">
                            <MenuItem.HeaderTemplate>
                                <DataTemplate>
                                    <ComboBox HorizontalAlignment="Stretch" SelectedItem="{i:Options ColorControlOptions.Layouts.Layout, Mode=TwoWay}">
                                        <ComboBox.ItemsSource>
                                            <CompositeCollection>
                                                <i:ComboBoxSeparator Content="{i:Loc Default}"/>
                                                <CollectionContainer Collection="{i:Options ColorControlOptions.Layouts.DefaultLayouts}"/>
                                                <i:ComboBoxSeparator Content="{i:Loc Custom}" Visibility="{i:Options ColorControlOptions.Layouts.IsNotEmpty, Converter={x:Static i:BooleanToVisibilityConverter.Default}}"/>
                                                <CollectionContainer Collection="{i:Options ColorControlOptions.Layouts}"/>
                                            </CompositeCollection>
                                        </ComboBox.ItemsSource>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Converter={x:Static i:FileNameConverter.Default}, ConverterParameter=0}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </DataTemplate>
                            </MenuItem.HeaderTemplate>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Tag="0" Header="{i:Loc Export, Suffix=...}"
                            Command="{i:Options ColorControlOptions.Layouts.ExportCommand}"
                            Icon="{i:InternalImage Image=Export}"/>
                        <MenuItem Tag="0" Header="{i:Loc Import, Suffix=...}"
                            Command="{i:Options ColorControlOptions.Layouts.ImportCommand}"
                            Icon="{i:InternalImage Image=Import}"/>
                        <Separator i:XSeparator.Header="{i:Loc Panels}"/>
                        <CollectionContainer Collection="{i:RemoteBinding Panels, RemoteSource=MainViewModel}"/>
                    </CompositeCollection>
                </MenuItem.ItemsSource>
            </MenuItem>
        </Menu>
    </i:XWindow.Menu>
    <Grid>
        <Hardcodet:TaskbarIcon
            Visibility="{i:Options WindowShowInTaskBar, Converter={x:Static i:BooleanToVisibilityConverter.Default}}"
            ToolTipText="{i:AssemblyProduct}"
            IconSource="{i:Image Imagin.Apps.Color, Logo.ico}"
            MenuActivation="LeftOrRightClick">
            <Hardcodet:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem 
                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=HideShowCommand}"
                        Header="{i:Loc HideShow}"/>
                    <Separator/>
                    <MenuItem Header="{i:Loc About}"
                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowAboutWindowCommand}"
                        Icon="{i:InternalImage Image=Info}"/>
                    <MenuItem Header="{i:Loc Options}"
                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowOptionsWindowCommand}"
                        Icon="{i:InternalImage Image=Options}"/>
                    <Separator/>
                    <MenuItem 
                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ForceExitCommand}"
                        Header="{i:Loc Exit}"/>
                </ContextMenu>
            </Hardcodet:TaskbarIcon.ContextMenu>
        </Hardcodet:TaskbarIcon>
        <i:ColorControl x:Name="ColorControl"
            ActiveDocument="{Binding ActiveDocument, Mode=OneWayToSource}"
            Documents="{i:Options Documents}"
            i:XElement.Reference="{Binding}"
            i:XElement.ReferenceKey="{x:Static local:MainViewModel.ColorControlReferenceKey}"
            Margin="5"
            Options="{i:Options}"/>
    </Grid>
</i:MainWindow>